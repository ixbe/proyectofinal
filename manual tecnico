- Manual Técnico para la Aplicación CRUD con Apache NetBeans y Java Web-

Introducción

 1.1 Propósito del Documento
Este manual técnico tiene como objetivo proporcionar una guía detallada sobre la creación e implementación de una aplicación CRUD (Crear, Leer, Actualizar, Eliminar) desarrollada con Apache NetBeans y Java Web, utilizando MySQL como sistema de gestión de base de datos. La aplicación se centra en la gestión de productos, permitiendo el registro y manipulación de información relacionada.

 1.2 Alcance del Sistema

La aplicación abarca las operaciones básicas de un sistema CRUD para gestionar productos. Los usuarios pueden agregar nuevos productos, ver la lista completa, editar la información existente y eliminar productos según sea necesario. Se ha implementado una interfaz web amigable para facilitar la interacción con el sistema.

 1.3 Tecnologías Utilizadas

La aplicación se desarrolló utilizando las siguientes tecnologías:

- **Apache NetBeans**: Entorno de desarrollo integrado (IDE) que proporciona herramientas robustas para el desarrollo de aplicaciones Java y Java EE.
- **Java Web**: Se utilizó Java para la lógica de la aplicación, y las tecnologías web como Servlets y JSP para la creación de la interfaz web.
- **MySQL**: Sistema de gestión de base de datos relacional para el almacenamiento de información de productos.

2. Configuración del Proyecto

 2.1 Requisitos del Sistema

- Apache NetBeans instalado.
- Servidor de aplicaciones compatible con Java Web (por ejemplo, Apache Tomcat).
- Servidor de base de datos MySQL.

 2.2 Configuración del Entorno de Desarrollo

1. Descargue e instale Apache NetBeans desde [https://netbeans.apache.org/](https://netbeans.apache.org/).
2. Clone el repositorio del proyecto desde [URL del Repositorio].
3. Abra el proyecto en Apache NetBeans.
4. Configure el servidor de aplicaciones para ejecutar el proyecto.

 2.3 Configuración de la Base de Datos

1. Cree una base de datos en MySQL llamada `bdproductos`.
2. Ejecute el script SQL proporcionado en `script_bdproductos.sql` para crear las tablas necesarias.

 3. Estructura del Proyecto

 3.1 Estructura de Carpetas

- `Web Pages`: Contiene archivos JSP y recursos web.
- `Source Packages`: Contiene el código fuente Java.
- `Libraries`: Bibliotecas externas.

 3.2 Descripción de Archivos Importantes

- `ProductoServlet.java`: Implementa las operaciones CRUD para productos.
- Archivos JSP: Representan las páginas web de la aplicación.

 4. Base de Datos

 4.1 Modelo de Datos

El modelo de datos incluye la tabla `Productos` para almacenar la información de los productos.

4.2 Tablas y Relaciones

- `Productos`: Almacena la información de los productos, incluyendo nombre, descripción y precio.

5. Capa de Datos (DAO)

No se utiliza una capa de datos específica (DAO) en este sistema, ya que se accede directamente a la base de datos desde el Servlet.

 6. Capa de Presentación (JSP)

 6.1 Listado.jsp (Listado de Productos)

Esta página muestra un listado de todos los productos, permitiendo buscar, editar y eliminar.

 6.2 Editar.jsp (Edición de Productos)

Permite editar la información de un producto existente.

 6.3 Eliminar.jsp (Eliminación de Productos)

Permite eliminar un producto.

 6.4 Nuevo.jsp (Creación de Productos)

Permite la creación de un nuevo producto.

 7. Proceso de Inicio de Sesión

No se implementa un sistema de inicio de sesión en este sistema básico.

 8. Consideraciones de Seguridad

 8.1 Prevención de Inyección SQL

Se recomienda seguir las mejores prácticas de seguridad, como el uso de consultas preparadas, para prevenir la inyección SQL en operaciones de base de datos.

 8.2 Autenticación y Autorización

Dado que no se implementa un sistema de inicio de sesión, no se aplican consideraciones de autenticación y autorización en este contexto.
